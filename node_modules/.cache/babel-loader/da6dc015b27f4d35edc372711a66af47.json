{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\javascript\\\\movie_app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n      this.setState({\n        movies: movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"loader__text\",\n          children: \"Loading.......\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this) : movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n        id: movie.id,\n        year: movie.year,\n        title: movie.title,\n        summary: movie.summary,\n        poster: movie.medium_cover_image\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/javascript/movie_app/src/App.js"],"names":["React","axios","Movie","App","Component","state","isLoading","movies","getMovies","data","get","setState","componentDidMount","render","map","movie","id","year","title","summary","medium_cover_image"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC7BC,KAD6B,GACrB;AACJC,MAAAA,SAAS,EAAE,IADP;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KADqB;;AAAA,SAM7BC,SAN6B,GAMjB,YAAW;AACnB,YAAM;AAAEC,QAAAA,IAAI,EAAG;AAACA,UAAAA,IAAI,EAAG;AAACF,YAAAA;AAAD;AAAR;AAAT,UAA+B,MAAMN,KAAK,CAACS,GAAN,CAAU,0DAAV,CAA3C;AACA,WAAKC,QAAL,CAAc;AAACJ,QAAAA,MAAM,EAACA,MAAR;AAAgBD,QAAAA,SAAS,EAAG;AAA5B,OAAd;AACH,KAT4B;AAAA;;AAU7BM,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,SAAL;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAACP,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAAsB,KAAKF,KAAjC;AACA,wBACI;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA,gBACKC,SAAS,gBACP;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,+BACC;AAAM,UAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADO,GAIRC,MAAM,CAACO,GAAP,CAAWC,KAAK,iBACd,QAAE,KAAF;AAAuB,QAAA,EAAE,EAAEA,KAAK,CAACC,EAAjC;AAAqC,QAAA,IAAI,EAAED,KAAK,CAACE,IAAjD;AAAuD,QAAA,KAAK,EAAEF,KAAK,CAACG,KAApE;AAA2E,QAAA,OAAO,EAAEH,KAAK,CAACI,OAA1F;AAAmG,QAAA,MAAM,EAAEJ,KAAK,CAACK;AAAjH,SAAaL,KAAK,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,cADF;AALN;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA3B4B;;AA8BjC,eAAeb,GAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n        isLoading: true,\r\n        movies: []\r\n    };\r\n\r\n    getMovies = async() => {\r\n        const { data : {data : {movies }}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n        this.setState({movies:movies, isLoading : false});\r\n    }\r\n    componentDidMount() {\r\n        this.getMovies();\r\n    };\r\n\r\n    render() {\r\n        const {isLoading, movies} = this.state;\r\n        return (\r\n            <section class=\"container\">\r\n                {isLoading \r\n                ? (<div class=\"loader\">\r\n                    <span class=\"loader__text\">Loading.......</span>\r\n                </div>)\r\n                : movies.map(movie => (\r\n                    < Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} />\r\n                ))}\r\n        </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}